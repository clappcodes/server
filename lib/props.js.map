{
  "version": 3,
  "sources": ["../src/props.ts"],
  "sourcesContent": ["import * as esbuild from \"esbuild\";\nimport * as path from \"path\";\n\nexport class Props {\n\tversion = 1;\n\n\t/**\n\t * ESBuild serve port\n\t */\n\tappPort = 1212;\n\t/**\n\t * Applications root dir\n\t */\n\tappRoot = \"/Applications\";\n\t/**\n\t * Application name\n\t */\n\tappName = \"Crawless28Nov.app\";\n\n\t/**\n\t * Source path\n\t */\n\t// @ts-ignore\n\tsrcPath = CLAPP_SRC_PATH; //process.env.PWD\n\n\tget appPath(): string {\n\t\treturn path.resolve(this.appRoot, this.appName);\n\t}\n\tget resPath(): string {\n\t\treturn path.resolve(this.appPath, \"Contents/Resources\");\n\t}\n\tget cmdPath(): string {\n\t\treturn path.resolve(this.appPath, \"Contents/MacOS/Crawless\");\n\t}\n\tget devPath(): string {\n\t\treturn path.resolve(this.resPath, \"app.dev\");\n\t}\n\tget libPath(): string {\n\t\treturn path.resolve(this.devPath, \"lib\"); // library files\n\t}\n\tget proPath(): string {\n\t\treturn path.resolve(this.devPath, \"pro\"); // project files\n\t}\n\tget runFile(): string {\n\t\treturn path.resolve(this.libPath, \"@clapp/server/lib/app.js\");\n\t}\n\n\tget build(): esbuild.BuildOptions {\n\t\treturn {\n\t\t\tentryPoints: [\"./**/*.ts\"],\n\t\t\tplatform: \"node\",\n\t\t\tcolor: true,\n\t\t\tlogLevel: \"debug\",\n\t\t\tformat: \"cjs\",\n\t\t\toutdir: \"./\",\n\t\t};\n\t}\n\n\tget serve(): esbuild.ServeOptions {\n\t\treturn {\n\t\t\tport: this.appPort,\n\t\t\tservedir: this.devPath,\n\t\t};\n\t}\n\n\tconstructor(init = {}) {\n\t\tObject.assign(this, init);\n\t}\n\n\tsrcFile(file: string) {\n\t\treturn path.resolve(this.srcPath, file);\n\t}\n\n\tlibFile(file: string) {\n\t\treturn path.resolve(this.libPath, file);\n\t}\n\n\tproFile(file: string) {\n\t\treturn path.resolve(this.proPath, file);\n\t}\n}\n\nexport const props = new Props();\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,WAAsB;AAEf,MAAM,MAAM;AAAA,EAClB,UAAU;AAAA;AAAA;AAAA;AAAA,EAKV,UAAU;AAAA;AAAA;AAAA;AAAA,EAIV,UAAU;AAAA;AAAA;AAAA;AAAA,EAIV,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAMV,UAAU;AAAA;AAAA,EAEV,IAAI,UAAkB;AACrB,WAAO,KAAK,QAAQ,KAAK,SAAS,KAAK,OAAO;AAAA,EAC/C;AAAA,EACA,IAAI,UAAkB;AACrB,WAAO,KAAK,QAAQ,KAAK,SAAS,oBAAoB;AAAA,EACvD;AAAA,EACA,IAAI,UAAkB;AACrB,WAAO,KAAK,QAAQ,KAAK,SAAS,yBAAyB;AAAA,EAC5D;AAAA,EACA,IAAI,UAAkB;AACrB,WAAO,KAAK,QAAQ,KAAK,SAAS,SAAS;AAAA,EAC5C;AAAA,EACA,IAAI,UAAkB;AACrB,WAAO,KAAK,QAAQ,KAAK,SAAS,KAAK;AAAA,EACxC;AAAA,EACA,IAAI,UAAkB;AACrB,WAAO,KAAK,QAAQ,KAAK,SAAS,KAAK;AAAA,EACxC;AAAA,EACA,IAAI,UAAkB;AACrB,WAAO,KAAK,QAAQ,KAAK,SAAS,0BAA0B;AAAA,EAC7D;AAAA,EAEA,IAAI,QAA8B;AACjC,WAAO;AAAA,MACN,aAAa,CAAC,WAAW;AAAA,MACzB,UAAU;AAAA,MACV,OAAO;AAAA,MACP,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,QAAQ;AAAA,IACT;AAAA,EACD;AAAA,EAEA,IAAI,QAA8B;AACjC,WAAO;AAAA,MACN,MAAM,KAAK;AAAA,MACX,UAAU,KAAK;AAAA,IAChB;AAAA,EACD;AAAA,EAEA,YAAY,OAAO,CAAC,GAAG;AACtB,WAAO,OAAO,MAAM,IAAI;AAAA,EACzB;AAAA,EAEA,QAAQ,MAAc;AACrB,WAAO,KAAK,QAAQ,KAAK,SAAS,IAAI;AAAA,EACvC;AAAA,EAEA,QAAQ,MAAc;AACrB,WAAO,KAAK,QAAQ,KAAK,SAAS,IAAI;AAAA,EACvC;AAAA,EAEA,QAAQ,MAAc;AACrB,WAAO,KAAK,QAAQ,KAAK,SAAS,IAAI;AAAA,EACvC;AACD;AAEO,MAAM,QAAQ,IAAI,MAAM;",
  "names": []
}
