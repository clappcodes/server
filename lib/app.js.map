{
  "version": 3,
  "sources": ["../src/app.ts", "../src/props.ts", "../src/state.ts"],
  "sourcesContent": ["import * as esbuild from 'esbuild'\nimport * as path from 'path'\nimport * as fs from 'fs'\nimport { props } from './props'\nimport { state } from './state'\n\nexport { props, state }\n\nexport function init(force = false) {\n  const { devPath, libPath, proPath, srcPath } = props\n\n  if (force || !fs.existsSync(props.devPath)) {\n    fs.mkdirSync(props.libPath, { recursive: true })\n    fs.mkdirSync(props.proPath, { recursive: true })\n\n    fs.writeFileSync(\n      path.resolve(props.devPath, 'index.html'),\n      `\n      <script>var _es = new EventSource('/esbuild').addEventListener('change', (e) => console.log(e.data))</script>\n      <h1>crawless (ext) app</h1><pre>${JSON.stringify(props, null, 2)}</pre>`,\n    )\n\n    // create empty entry points\n    fs.writeFileSync(props.libFile('main.ts'), ``)\n    fs.writeFileSync(props.proFile('main.ts'), ``)\n\n    console.log('[app] [init]', { devPath, libPath, proPath, srcPath })\n  }\n\n  console.log('[app] [paths]', { devPath, libPath, proPath, srcPath })\n\n  // copy app & run files\n  // fs.copyFileSync(props.srcFile('app.js'), props.libFile('app.js'))\n  // fs.copyFileSync(props.srcFile('run.js'), props.libFile('run.js'))\n\n  // console.log('[app] synced!', [\n  //   props.libFile('app.js'),\n  //   props.libFile('run.js'),\n  // ])\n}\n\nexport async function startServer() {\n  state.options = props.build\n  state.context = await esbuild.context(props.build)\n  await state.context.watch()\n  state.server = await state.context.serve(props.serve)\n\n  console.log(`[app] ${startServer.name}`, state)\n\n  return state\n}\n\nconsole.log('[app] ELECTRON_RUN_AS_NODE', process.env.ELECTRON_RUN_AS_NODE)\nconsole.log('[app] CXA_SERVER_START', process.env.CXA_SERVER_START)\nconsole.log('[app] CMD', process.execPath, ...process.execArgv)\n\nif (process.env.CXA_SERVER_START) {\n  startServer()\n  console.log('[app] PROCESS', process.pid)\n}\n", "import * as esbuild from \"esbuild\";\nimport * as path from \"path\";\n\nexport class Props {\n\t/**\n\t * ESBuild serve port\n\t */\n\tappPort = 1212;\n\t/**\n\t * Applications root dir\n\t */\n\tappRoot = \"/Applications\";\n\t/**\n\t * Application name\n\t */\n\tappName = \"Crawless28Nov.app\";\n\n\t/**\n\t * Source path\n\t */\n\t// @ts-ignore\n\tsrcPath = CLAPP_SRC_PATH; //process.env.PWD\n\n\tget appPath(): string {\n\t\treturn path.resolve(this.appRoot, this.appName);\n\t}\n\tget resPath(): string {\n\t\treturn path.resolve(this.appPath, \"Contents/Resources\");\n\t}\n\tget cmdPath(): string {\n\t\treturn path.resolve(this.appPath, \"Contents/MacOS/Crawless\");\n\t}\n\tget devPath(): string {\n\t\treturn path.resolve(this.resPath, \"app.dev\");\n\t}\n\tget libPath(): string {\n\t\treturn path.resolve(this.devPath, \"lib\"); // library files\n\t}\n\tget proPath(): string {\n\t\treturn path.resolve(this.devPath, \"pro\"); // project files\n\t}\n\tget runFile(): string {\n\t\treturn path.resolve(this.libPath, \"app.js\");\n\t}\n\n\tget build(): esbuild.BuildOptions {\n\t\treturn {\n\t\t\tentryPoints: [this.proFile(\"main.ts\"), this.libFile(\"main.ts\")],\n\t\t\tbundle: true,\n\t\t\tplatform: \"node\",\n\t\t\tcolor: true,\n\t\t\tlogLevel: \"debug\",\n\t\t\ttarget: [\"es2020\", \"node12\"],\n\t\t\toutdir: this.devPath,\n\t\t\texternal: [\"esbuild\"],\n\t\t};\n\t}\n\n\tget serve(): esbuild.ServeOptions {\n\t\treturn {\n\t\t\tport: this.appPort,\n\t\t\tservedir: this.devPath,\n\t\t};\n\t}\n\n\tconstructor(init = {}) {\n\t\tObject.assign(this, init);\n\t}\n\n\tsrcFile(file: string) {\n\t\treturn path.resolve(this.srcPath, file);\n\t}\n\n\tlibFile(file: string) {\n\t\treturn path.resolve(this.libPath, file);\n\t}\n\n\tproFile(file: string) {\n\t\treturn path.resolve(this.proPath, file);\n\t}\n}\n\nexport const props = new Props();\n", "import type { BuildContext, ServeResult, BuildOptions } from 'esbuild'\nimport type { ChildProcess } from 'child_process'\n\nexport module state {\n  export var options: BuildOptions\n  export var context: BuildContext\n  export var server: ServeResult\n  // @ts-ignore\n  export var proccess: ChildProcess = process.__cxa_server\n  export var tid: NodeJS.Timeout\n}\n"],
  "mappings": "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",
  "names": ["path", "init", "state"]
}
